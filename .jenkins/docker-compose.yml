
database:
  image: build.datapunt.amsterdam.nl:5000/atlas/postgres
  environment:
    POSTGRES_PASSWORD: insecure
    POSTGRES_USER: handelsregister

#elasticsearch:
#  image: build.datapunt.amsterdam.nl:5000/atlas/elasticsearch
#  volumes:
#    - ./backups/elasticsearch:/tmp/backups
#  user: root
#  command: /usr/share/elasticsearch/bin/elasticsearch -Des.insecure.allow.root=true -Des.network.host=0.0.0.0 -Des.path.repo=/tmp

tests:
  build: ../web
  links:
    - database:database
  environment:
    DATABASE_NAME: handelsregister
    DATABASE_USER: handelsregister
    DATABASE_PASSWORD: insecure
  command: /app/docker-test.sh

importer_mks:
  build: ../web
  links:
    - database:database
  environment:
    DATABASE_NAME: handelsregister
    DATABASE_USER: handelsregister
    DATABASE_PASSWORD: insecure
    PGPASSWORD: insecure
    OS_PASSWORD:
  command: >
    bash -c "/app/docker-migrate.sh \
            && python get_mks_dumps.py \
            && bash -c /app/loaddumps.sh"

bag_vbo_import:
  image: build.datapunt.amsterdam.nl:5000/atlas/postgres
  links:
    - database:db
  command: >
    bash -c "echo db:5432:handelsregister:handelsregister:insecure >> ~/.pgpass \
            && echo db:5432:atlas:handelsregister:insecure >> ~/.pgpass \
            && chmod 0600 ~/.pgpass \
            && echo copying bag vbo geo -> hr_geovbo tabel\
            && psql -U handelsregister -h db atlas -c  \
                '\copy (SELECT id, landelijk_id, geometrie from bag_verblijfsobject) TO STDOUT' \
            | psql -U handelsregister -h db handelsregister -c \
                '\copy hr_geovbo (id, bag_vbid, geometrie) FROM STDIN'"

importer:
  build: ../web
  links:
    - database:database
    #- elasticsearch:elasticsearch
  environment:
    DATABASE_NAME: handelsregister
    DATABASE_PASSWORD: insecure
  volumes:
    - ./data:/app/data
  command: >
    bash -c "/app/docker-wait.sh \
            && python manage.py run_import"

db-backup:
  image: build.datapunt.amsterdam.nl:5000/atlas/postgres
  links:
    - database:db
  environment:
    PGPASSWORD: insecure
  volumes:
    - ./backups:/tmp/backups
  command: >
    bash -c "echo database:5432:handelsregister:handelsregister:insecure > ~/.pgpass \
            && chmod 600 ~/.pgpass \
            && pg_dump --clean \
                        -Fc \
                        -t hr* \
                        -t kvk* \
                        -t geo*  \
                        -T auth*    \
                        -U handelsregister \
                        -h db -p 5432 \
                        handelsregister > /tmp/backups/database.dump"
