version: '3.0'
services:
  database:
    image: amsterdam/postgres11
    environment:
      POSTGRES_PASSWORD: insecure
      POSTGRES_USER: handelsregister
    volumes:
      - tmpdatabase:/tmp
    extra_hosts:
      admin.datapunt.amsterdam.nl: 10.99.157.24
    shm_size: '8gb'

  elasticsearch:
    image: amsterdam/elasticsearch6
    volumes:
      - ./backups/elasticsearch:/tmp/backups
    user: root
    command: elasticsearch -Ehttp.host=0.0.0.0 -Etransport.host=127.0.0.1

  importer:
    image: repo.data.amsterdam.nl/datapunt/handelsregister:${ENVIRONMENT}
    links:
      - elasticsearch
      - database
    volumes:
      - ./backups:/tmp/backups
    environment:
      DATABASE_NAME: handelsregister
      DATABASE_USER: handelsregister
      DATABASE_PASSWORD: insecure
      HANDELSREGISTER_OBJECTSTORE_PASSWORD:
      PGPASSWORD: insecure
      DATAPUNT_API_URL:
    command: >
      bash -c "/app/docker-wait.sh \
               && python manage.py migrate geo_views zero \
               && python manage.py migrate \
               && /app/docker-import.sh \
               && python manage.py build_index --reset"

  importer_el1:
    image: repo.data.amsterdam.nl/datapunt/handelsregister:${ENVIRONMENT}
    links:
      - database
      - elasticsearch
    environment:
      DATABASE_NAME: handelsregister
      DATABASE_USER: handelsregister
      DATABASE_PASSWORD: insecure
      DATAPUNT_API_URL: ${DATAPUNT_API_URL:-https://api.data.amsterdam.nl/}
    command: >
      bash -c "/app/docker-wait.sh \
              && python manage.py build_index --partial=1/3 --build"

  importer_el2:
    image: repo.data.amsterdam.nl/datapunt/handelsregister:${ENVIRONMENT}
    links:
      - database
      - elasticsearch
    environment:
      DATABASE_NAME: handelsregister
      DATABASE_USER: handelsregister
      DATABASE_PASSWORD: insecure
      DATAPUNT_API_URL: ${DATAPUNT_API_URL:-https://api.data.amsterdam.nl/}
    command: >
      bash -c "/app/docker-wait.sh \
              && python manage.py build_index --partial=2/3 --build"

  importer_el3:
    image: repo.data.amsterdam.nl/datapunt/handelsregister:${ENVIRONMENT}
    links:
      - database
      - elasticsearch
    environment:
      DATABASE_NAME: handelsregister
      DATABASE_USER: handelsregister
      DATABASE_PASSWORD: insecure
      DATAPUNT_API_URL: ${DATAPUNT_API_URL:-https://api.data.amsterdam.nl/}
    command: >
      bash -c "/app/docker-wait.sh \
              && python manage.py build_index --partial=3/3 --build"

  db-backup:
    image: amsterdam/postgres11
    volumes:
      - ./backups:/tmp/backups
    environment:
      PGPASSWORD: insecure
    command: >
      bash -c "echo database:5432:handelsregister:handelsregister:insecure > ~/.pgpass \
              && chmod 600 ~/.pgpass \
              && pg_dump --clean \
                          -Fc \
                          -t 'geo*' \
                          -t 'hr*' \
                          -t 'django*' \
                          -t 'sbi*' \
                          -U handelsregister \
                          -h database -p 5432 \
                          handelsregister > /tmp/backups/database.dump"

  el-backup:
    image: amsterdam/elasticsearch6
    volumes:
      - ./backups/elasticsearch:/tmp/backups
    user: root
    command: >
      bash -c "chmod -R 777 /tmp/backups \
              && curl -X PUT http://elasticsearch:9200/_snapshot/backup -H 'Content-Type: application/json' -d '{ \"type\": \"fs\", \"settings\": { \"location\": \"/tmp/backups\" }}' \
              && curl -X PUT http://elasticsearch:9200/_snapshot/backup/handelsregister?wait_for_completion=true -H 'Content-Type: application/json' -d '{ \"indices\": \"handelsregister\" }' \
              && chmod -R 777 /tmp/backups"

volumes:
   tmpdatabase:
