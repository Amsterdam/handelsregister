version: '3.0'
services:
  database:
    image: build.datapunt.amsterdam.nl:5000/atlas/postgres
    environment:
      POSTGRES_PASSWORD: insecure
      POSTGRES_USER: handelsregister
    volumes:
      - tmpdatabase:/tmp

  elasticsearch:
    image: build.datapunt.amsterdam.nl:5000/atlas/elasticsearch
    volumes:
      - ./backups/elasticsearch:/tmp/backups
    user: root
    command: /usr/share/elasticsearch/bin/elasticsearch -Des.insecure.allow.root=true -Des.network.host=0.0.0.0 -Des.path.repo=/tmp

  importer:
    image: build.datapunt.amsterdam.nl:5000/datapunt/handelsregister:${ENVIRONMENT}
    links:
      - database
      - elasticsearch
    environment:
      DATABASE_NAME: handelsregister
      DATABASE_USER: handelsregister
      DATABASE_PASSWORD: insecure
      HANDELSREGISTER_OBJECTSTORE_PASSWORD:
      PGPASSWORD: insecure
      DATAPUNT_API_URL:
    command: >
      bash -c "/app/docker-wait.sh \
               && python manage.py migrate geo_views zero \
               && python manage.py migrate \
               && /app/docker-import.sh \
               && python manage.py build_index --reset"


  importer_el1:
    image: build.datapunt.amsterdam.nl:5000/datapunt/handelsregister:${ENVIRONMENT}
    links:
      - database
      - elasticsearch
    environment:
      DATABASE_NAME: handelsregister
      DATABASE_USER: handelsregister
      DATABASE_PASSWORD: insecure
      DATAPUNT_API_URL: ${DATAPUNT_API_URL:-https://api.data.amsterdam.nl/}
    command: >
      bash -c "/app/docker-wait.sh \
              && python manage.py build_index --partial=1/3 --build"

  importer_el2:
    image: build.datapunt.amsterdam.nl:5000/datapunt/handelsregister:${ENVIRONMENT}
    links:
      - database
      - elasticsearch
    environment:
      DATABASE_NAME: handelsregister
      DATABASE_USER: handelsregister
      DATABASE_PASSWORD: insecure
      DATAPUNT_API_URL: ${DATAPUNT_API_URL:-https://api.data.amsterdam.nl/}
    command: >
      bash -c "/app/docker-wait.sh \
              && python manage.py build_index --partial=2/3 --build"

  importer_el3:
    image: build.datapunt.amsterdam.nl:5000/datapunt/handelsregister:${ENVIRONMENT}
    links:
      - database
      - elasticsearch
    environment:
      DATABASE_NAME: handelsregister
      DATABASE_USER: handelsregister
      DATABASE_PASSWORD: insecure
      DATAPUNT_API_URL: ${DATAPUNT_API_URL:-https://api.data.amsterdam.nl/}
    command: >
      bash -c "/app/docker-wait.sh \
              && python manage.py build_index --partial=3/3 --build"


  db-backup:
    image: build.datapunt.amsterdam.nl:5000/atlas/postgres
    links:
      - database
    environment:
      PGPASSWORD: insecure
    volumes:
      - ./backups:/tmp/backups
    command: >
      bash -c "echo database:5432:handelsregister:handelsregister:insecure > ~/.pgpass \
              && chmod 600 ~/.pgpass \
              && pg_dump --clean \
                          -Fc \
                          -t geo* \
                          -t hr* \
                          -t kvk* \
                          -t django_migrations  \
                          -T auth*    \
                          -U handelsregister \
                          -h database -p 5432 \
                          handelsregister > /tmp/backups/database.dump"

  el-backup:
    image: build.datapunt.amsterdam.nl:5000/atlas/elasticsearch
    links:
      - elasticsearch
    volumes:
      - ./backups/elasticsearch:/tmp/backups
    user: root
    command: >
      bash -c "curl -X PUT http://elasticsearch:9200/_snapshot/backup -d '{ \"type\": \"fs\", \"settings\": { \"location\": \"/tmp/backups\" }}' \
              && curl -X PUT http://elasticsearch:9200/_snapshot/backup/handelsregister?wait_for_completion=true -d '{ \"indices\": \"handelsregister\" }' \
              && chmod -R 777 /tmp/backups"
volumes:
   tmpdatabase:
